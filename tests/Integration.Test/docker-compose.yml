# Copyright 2022 MONAI Consortium
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: "3.7"
services:
  minio:
    image: "minio/minio:latest"
    command: server --console-address ":9001" /data
    hostname: minio
    volumes:
      - ./.run/minio/data:/data
      - ./.run/minio/config:/root/.minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    networks:
      - testrunner
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 15s
      timeout: 30s
      retries: 3

  createbuckets:
    image: minio/mc
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      BUCKET_NAME: monaideploy
      ENDPOINT: http://minio:9000
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - testrunner
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add myminio $$ENDPOINT $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb myminio/$$BUCKET_NAME;
      /usr/bin/mc policy set public myminio/$$BUCKET_NAME;
      /usr/bin/mc ls myminio;
      # exit 0
      "

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
        - 5672:5672
        - 15672:15672
    environment:
        RABBITMQ_DEFAULT_USER: "rabbitmq"
        RABBITMQ_DEFAULT_PASS: "rabbitmq"
        RABBITMQ_DEFAULT_VHOST: "monaideploy"
        RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
    networks:
        - testrunner
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 30s
      retries: 3

  orthanc:
    image: "jodogne/orthanc-plugins"
    hostname: orthanc
    volumes:
      - ${PWD}/configs/orthanc.json:/etc/orthanc/orthanc.json
      - ${PWD}/.run/orthanc:/var/lib/orthanc/db/
    ports:
      - "1114:1114"
      - "8089:8089"
    environment:
      VERBOSE_ENABLED: "true"
    networks:
      - testrunner
    healthcheck:
      test: ["CMD", "/probes/test-aliveness.py"]
      start_period: 10s
      retries: 3
      interval: 15s
      timeout: 30s

  informatics-gateway:
    image: "ghcr.io/project-monai/monai-deploy-informatics-gateway:${TAG}"
    volumes:
      - ./configs/informatics-gateway.json:/opt/monai/ig/appsettings.json
      - ./.run/ig/payloads:/payloads/
      - ./.run/ig/database:/database/
      - ./bin/Release/net6.0:/opt/monai/ig/plug-ins/
    ports:
      - "104:104"
      - "2575:2575"
      - "5000:5000"
    networks:
      - testrunner
    depends_on:
      minio:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    links:
      - minio
      - rabbitmq

networks:
  testrunner:
    name: testrunner
    driver: bridge
