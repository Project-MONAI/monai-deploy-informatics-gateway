// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Monai.Deploy.InformaticsGateway.PlugIns.RemoteAppExecution.Database.EntityFramework;

#nullable disable

namespace Monai.Deploy.InformaticsGateway.PlugIns.RemoteAppExecution.Migrations
{
    [DbContext(typeof(RemoteAppExecutionDbContext))]
    partial class RemoteAppExecutionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.21");

            modelBuilder.Entity("Monai.Deploy.InformaticsGateway.PlugIns.RemoteAppExecution.RemoteAppExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CorrelationId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExportTaskId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalValues")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("RequestTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("SeriesInstanceUid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SopInstanceUid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StudyInstanceUid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkflowInstanceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "WorkflowInstanceId", "ExportTaskId", "StudyInstanceUid", "SeriesInstanceUid" }, "idx_remoteapp_all");

                    b.HasIndex(new[] { "SopInstanceUid" }, "idx_remoteapp_instance");

                    b.HasIndex(new[] { "WorkflowInstanceId", "ExportTaskId", "StudyInstanceUid" }, "idx_remoteapp_study");

                    b.ToTable("RemoteAppExecutions");
                });
#pragma warning restore 612, 618
        }
    }
}
