# editorconfig.org

# top-most EditorConfig file
root = true

# Copyright File Header
file_header_template                = Copyright [year file created] - [last year file modified], MONAI Consortium\nSPDX-License-Identifier: Apache License 2.0
dotnet_diagnostic.IDE0073.severity  = error


# Default settings:
# A newline ending every file
# Use 4 spaces as indentation
[*]
insert_final_newline        = true
indent_style                = space
indent_size                 = 4
trim_trailing_whitespace    = true

# Generated code
[*{_AssemblyInfo.cs,.notsupported.cs,AsmOffsets.cs}]
generated_code = true
dotnet_style_namespace_match_folder                                         = true:warn
dotnet_style_readonly_field                                                 = true:warn
dotnet_style_predefined_type_for_locals_parameters_members                  = true:suggestion
dotnet_style_predefined_type_for_member_access                              = true:suggestion
dotnet_style_require_accessibility_modifiers                                = for_non_interface_members:error
dotnet_style_allow_multiple_blank_lines_experimental                        = true:silent
dotnet_style_allow_statement_immediately_after_block_experimental           = true:silent
dotnet_code_quality_unused_parameters                                       = all:warning
dotnet_style_parentheses_in_arithmetic_binary_operators                     = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators                          = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators                     = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators                                 = never_if_unnecessary:silent

# avoid this. unless absolutely necessary
dotnet_style_qualification_for_field                                        = false:error
dotnet_style_qualification_for_property                                     = false:error
dotnet_style_qualification_for_method                                       = false:error
dotnet_style_qualification_for_event                                        = false:error

# C# files
[*.cs]
# New line preferences
csharp_new_line_before_open_brace                     = all
csharp_new_line_before_else                           = true
csharp_new_line_before_catch                          = true
csharp_new_line_before_finally                        = true
csharp_new_line_before_members_in_object_initializers = false
csharp_new_line_before_members_in_anonymous_types     = true
csharp_new_line_between_query_expression_clauses      = true

# Indentation preferences
csharp_indent_block_contents           = true
csharp_indent_braces                   = false
csharp_indent_case_contents            = true
csharp_indent_case_contents_when_block = false
csharp_indent_switch_labels            = true
csharp_indent_labels                   = one_less_than_current

# Modifier preferences
csharp_preferred_modifier_order              = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion


# Types: use keywords instead of BCL types, and permit var only when the type is clear
csharp_style_var_for_built_in_types                         = true:suggestion
csharp_style_var_when_type_is_apparent                      = true:suggestion
csharp_style_var_elsewhere                                  = true:suggestion

# common styles
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# name mostly everything using PascalCase be default
dotnet_naming_rule.mostly_everything_should_be_pascal_case.severity = error
dotnet_naming_rule.mostly_everything_should_be_pascal_case.symbols  = mostly_everything
dotnet_naming_rule.mostly_everything_should_be_pascal_case.style    = pascal_case_style
dotnet_naming_symbols.mostly_everything.applicable_kinds            = namespace,class,struct,interface,enum,property,method,field,event,delegate,type_parameter,local_function

# interfaces should begin with an uppercase I
dotnet_naming_rule.interfaces_begin_with_i.severity         = error
dotnet_naming_rule.interfaces_begin_with_i.symbols          = interfaces
dotnet_naming_rule.interfaces_begin_with_i.style            = i_prefix_pascal_case
dotnet_naming_symbols.interfaces.applicable_kinds           = interface
dotnet_naming_style.i_prefix_pascal_case.required_prefix    = I
dotnet_naming_style.i_prefix_pascal_case.capitalization     = pascal_case

# name all constant fields using PascalCase
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity   = error
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols    = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style      = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds              = field
dotnet_naming_symbols.constant_fields.required_modifiers            = const

# static readonly fields should be PascalCase
dotnet_naming_rule.static_readonly_fields_pascal_case.severity  = error
dotnet_naming_rule.static_readonly_fields_pascal_case.symbols   = static_readonly_fields
dotnet_naming_rule.static_readonly_fields_pascal_case.style     = pascal_case_style
dotnet_naming_symbols.static_readonly_fields.applicable_kinds   = field
dotnet_naming_symbols.static_readonly_fields.required_modifiers = readonly,static

# static fields should have s_ prefix
dotnet_naming_rule.static_fields_should_have_prefix.severity    = error
dotnet_naming_rule.static_fields_should_have_prefix.symbols     = static_fields
dotnet_naming_rule.static_fields_should_have_prefix.style       = static_prefix_style
dotnet_naming_symbols.static_fields.applicable_kinds            = field
dotnet_naming_symbols.static_fields.required_modifiers          = static
dotnet_naming_symbols.static_fields.applicable_accessibilities  = private, internal, private_protected
dotnet_naming_style.static_prefix_style.required_prefix         = s_
dotnet_naming_style.static_prefix_style.capitalization          = camel_case

# internal and private fields should be _camelCase
dotnet_naming_rule.camel_case_for_private_internal_fields.severity          = error
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols           = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style             = camel_case_underscore_style
dotnet_naming_symbols.private_internal_fields.applicable_kinds              = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities    = private, internal
dotnet_naming_style.camel_case_underscore_style.required_prefix             = _
dotnet_naming_style.camel_case_underscore_style.capitalization              = camel_case

# Code style defaults
csharp_using_directive_placement                            = outside_namespace:warning
dotnet_sort_system_directives_first                         = true
csharp_prefer_braces                                        = true:silent
csharp_preserve_single_line_blocks                          = true:none
csharp_preserve_single_line_statements                      = false:none
csharp_prefer_static_local_function                         = true:suggestion
csharp_prefer_simple_using_statement                        = true:none
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_switch_expression                       = true:suggestion

# Expression-level preferences
dotnet_style_object_initializer                                     = true:suggestion
dotnet_style_collection_initializer                                 = true:suggestion
dotnet_style_explicit_tuple_names                                   = true:suggestion
dotnet_style_coalesce_expression                                    = true:suggestion
dotnet_style_null_propagation                                       = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method    = true:suggestion
dotnet_style_prefer_inferred_tuple_names                            = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names            = true:suggestion
dotnet_style_prefer_auto_properties                                 = true:error
dotnet_style_prefer_conditional_expression_over_assignment          = true:silent
dotnet_style_prefer_conditional_expression_over_return              = true:silent
csharp_prefer_simple_default_expression                             = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_methods         = true:silent
csharp_style_expression_bodied_constructors    = true:silent
csharp_style_expression_bodied_operators       = true:silent
csharp_style_expression_bodied_properties      = true:silent
csharp_style_expression_bodied_indexers        = true:silent
csharp_style_expression_bodied_accessors       = true:silent
csharp_style_expression_bodied_lambdas         = true:silent
csharp_style_expression_bodied_local_functions = true:silent

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check   = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check   = true:suggestion
csharp_style_inlined_variable_declaration               = true:suggestion

# Null checking preferences
csharp_style_throw_expression           = true:suggestion
csharp_style_conditional_delegate_call  = true:suggestion

# Other features
csharp_style_prefer_index_operator                  = true:none
csharp_style_prefer_range_operator                  = true:none
csharp_style_pattern_local_over_anonymous_function  = true:none


# Space preferences
csharp_space_after_cast                                                     = false
csharp_space_after_colon_in_inheritance_clause                              = true
csharp_space_after_comma                                                    = true
csharp_space_after_dot                                                      = false
csharp_space_after_keywords_in_control_flow_statements                      = true
csharp_space_after_semicolon_in_for_statement                               = true
csharp_space_around_binary_operators                                        = before_and_after
csharp_space_around_declaration_statements                                  = false
csharp_space_before_colon_in_inheritance_clause                             = true
csharp_space_before_comma                                                   = false
csharp_space_before_dot                                                     = false
csharp_space_before_open_square_brackets                                    = false
csharp_space_before_semicolon_in_for_statement                              = false
csharp_space_between_empty_square_brackets                                  = false
csharp_space_between_method_call_empty_parameter_list_parentheses           = false
csharp_space_between_method_call_name_and_opening_parenthesis               = false
csharp_space_between_method_call_parameter_list_parentheses                 = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses    = false
csharp_space_between_method_declaration_name_and_open_parenthesis           = false
csharp_space_between_method_declaration_parameter_list_parentheses          = false
csharp_space_between_parentheses                                            = false
csharp_space_between_square_brackets                                        = false

# Misc styles
csharp_style_namespace_declarations                                         = block_scoped:silent

csharp_style_prefer_not_pattern                                             = true:suggestion
csharp_style_prefer_pattern_matching                                        = true:silent
dotnet_style_prefer_simplified_boolean_expressions                          = true:suggestion
dotnet_style_prefer_compound_assignment                                     = true:suggestion
dotnet_style_prefer_simplified_interpolation                                = true:suggestion
csharp_style_prefer_null_check_over_type_check                              = true:suggestion
csharp_style_prefer_local_over_anonymous_function                           = true:suggestion
csharp_style_prefer_tuple_swap                                              = true:suggestion

dotnet_style_operator_placement_when_wrapping                               = beginning_of_line


csharp_style_deconstructed_variable_declaration                             = true:suggestion
csharp_style_unused_value_assignment_preference                             = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference                   = discard_variable:silent


# Analyzers
# Note that the above severities do not affect builds by design. These values are only used
# to configure the entries in Visual Studio's "Error List" and power its Intellisense.
# Instead, the rules below are used to configure build-time analyzer behavior.
# Unfortunately, some rules have been disabled due to performance reasons outside of
# Visual Studio and can be found here:
# https://github.com/dotnet/roslyn/blob/0a73f08951f408624639e1601bb828b396f154c8/src/Analyzers/Core/Analyzers/EnforceOnBuildValues.cs#L99

# C# Compiler Rules
dotnet_diagnostic.CS1591.severity = none        # Missing XML comment for publicly visible type or member

# Code Quality Rules
dotnet_diagnostic.CA1031.severity = none        # Do not catch general exception types
dotnet_diagnostic.CA1032.severity = suggestion  # Implement standard exception constructors
dotnet_diagnostic.CA1054.severity = error       # URI parameters should not be strings
dotnet_diagnostic.CA1305.severity = suggestion  # Specify IFormatProvider
dotnet_diagnostic.CA1716.severity = warning     # Identifiers should not match keywords
dotnet_diagnostic.CA1848.severity = none        # Do not encourage LoggerMessage delegates in every instance
dotnet_diagnostic.CA2007.severity = suggestion  # Do not directly await a Task

# Code Style Rules
dotnet_diagnostic.IDE0003.severity = error      # Remove this or Me qualification
dotnet_diagnostic.IDE0004.severity = error      # Remove unnecessary cast
dotnet_diagnostic.IDE0005.severity = error      # Remove unnecessary import
dotnet_diagnostic.IDE0010.severity = none       # Add missing cases to switch statement
dotnet_diagnostic.IDE0032.severity = error      # Use auto property
dotnet_diagnostic.IDE0044.severity = error      # Add readonly modifier
dotnet_diagnostic.IDE0055.severity = error      # Fix formatting
dotnet_diagnostic.IDE0065.severity = error      # 'using' directive placement
dotnet_diagnostic.IDE1005.severity = error      # Use conditional delegate call
dotnet_diagnostic.IDE1006.severity = error      # Naming rule violation
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_prefer_extended_property_pattern = true:suggestion



# C++ Files
[*.{cpp,h,in}]
curly_bracket_next_line         = true
indent_brace_style              = Allman

# Xml project files
[*.{csproj,dcproj,vbproj,vcxproj,vcxproj.filters,proj,nativeproj,locproj}]
indent_size                     = 2

[*.{csproj,dcproj,vbproj,proj,nativeproj,locproj}]
charset                         = utf-8

# Xml build files
[*.builds]
indent_size                     = 2

# Xml files
[*.{xml,stylecop,resx,ruleset}]
indent_size                     = 2

# Xml config files
[*.{props,targets,config,nuspec}]
indent_size                     = 2

# JSON files
[*.json]
indent_size                     = 2

# YAML files
[*.{yml,yaml}]
indent_size                     = 2

# Shell scripts
[*.sh]
end_of_line                     = lf

[*.{cmd,bat}]
end_of_line                     = crlf

# Python
[*.py]
max_line_length                 = 88

# JSON
[*.json]
indent_size                     = 2
insert_final_newline            = ignore
